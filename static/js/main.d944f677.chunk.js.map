{"version":3,"sources":["redux/contact/contact-actions.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filters/Filters.js","App.js","redux/contact/contact-reducer.js","redux/store.js","index.js"],"names":["addContacts","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactItem","onRemove","className","type","onClick","getvisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","connect","contacts","items","dispatch","onRemoveContact","contactActions","map","ContactForm","state","handleSubmitForm","e","preventDefault","onSubmit","props","validateForm","setState","handleChange","currentTarget","value","check","alert","this","pattern","title","required","onChange","placeholder","Component","target","App","checkContact","checked","find","localStorage","getItem","parsetContact","JSON","parse","prevProps","prevState","setItem","stringify","length","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactReduser","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d944f677.chunk.js","sourcesContent":["import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContacts = createAction('contacts/add',( name, number ) => ({\n    payload: {\n        id: shortid.generate(), \n        name, \n        number,\n    }\n}))\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContacts, deleteContact, changeFilter };\n\n\n\n\n","import React from 'react';\nimport './ContactList.scss';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contact/contact-actions'\n\nconst ContactItem = ({ id, name, number , onRemove }) => {\n    return (\n        <li className=\"Contact-List\" key={id}> \n            {name}: {number} <button className=\"Button-List\" type=\"submit\" onClick={() => onRemove(id)}>Delete</button>\n        </li>\n    )\n}\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n    return (\n        <ul>\n            {contacts.map( contact => (\n                <ContactItem \n                key={contact.id}\n                id={contact.id}\n                name={contact.name}\n                number={contact.number}\n                onRemove={onRemoveContact}\n                />\n            ))}\n        </ul>\n\n    )\n};\n\nconst getvisibleContacts = (allContacts, filter) => {\n    const normalizedFilter =  filter.toLowerCase();\n\n    return allContacts.filter( contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n    );\n};\n\nconst mapStateToProps = ({contacts: { items, filter }}) => ({\n    contacts: getvisibleContacts(items, filter),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveContact: (id) => dispatch(contactActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import  { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contact/contact-actions'\nimport './ContactForm.scss';\n\nclass ContactForm extends Component {\n\n    state = {\n        name: '',\n        number: ''\n    };\n  \n    handleSubmitForm = e => {\n        e.preventDefault();\n        const { onSubmit } = this.props;\n        const { name, number } = this.state;\n        \n        const isValidateForm = this.validateForm()\n        if(!isValidateForm) return \n        onSubmit(name, number)\n\n        this.setState({ name: '' , number: '' ,});\n    };\n     \n    handleChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    };\n \n\n    validateForm = () => {\n        const { name, number } = this.state\n        const { check } = this.props\n        if (!name || !number) {\n            alert('Some filed is empty')\n        }\n        return check(name);\n    };\n\n    render() {\n        return (\n            \n            <form className=\"Form\" onSubmit={this.handleSubmitForm}>\n                <label className=\"Label\">\n                Name  <input className=\"Input\"\n                        id={this.state.id}\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        onChange={this.handleChange} \n                        placeholder=\"name\"  \n                    /> \n                </label>\n                <label>\n                Number  <input  className=\"Input\"\n                        type=\"tel\"\n                        name=\"number\"\n                        placeholder=\"number\"\n                        value={this.state.number}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={this.handleChange}\n                    />\n                </label>\n                <button className=\"Button\" type=\"submit\">Add contact</button> \n            </form>    \n        );\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(contactActions.addContacts( name, number)),\n})\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Filters.scss';\nimport {connect} from 'react-redux';\nimport contactActions from '../../redux/contact/contact-actions'\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <>\n        <h3> Find contacts by me </h3>\n      <input className=\"Input-Filter\"\n        type=\"text\"\n        name=''\n        value={filter}\n        onChange={changeFilter}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter\n})\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","import React from 'react';\nimport  { Component } from 'react';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filters';\n\nimport './App.scss';\n\nclass App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n    }\n    \n    handleSubmitForm = (contact) => {\n        this.setState(({contacts}) => ({\n            contacts: [...contacts, contact],\n        }));\n    }\n    \n    checkContact = ( name ) => {\n        const { contacts } = this.state\n        \n        const checked = !!contacts.find(\n        (contact) => contact.name === name);\n  \n        checked && alert(`${name} is already in contacts`)\n        return !checked\n      \n    };\n    \n    componentDidMount(){\n        const contacts = localStorage.getItem('contacts');\n        const parsetContact = JSON.parse(contacts);\n        if (parsetContact){\n            this.setState({ contacts: parsetContact });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(this.state.contacts !== prevState.contacts) {\n            localStorage.setItem( 'contacts', JSON.stringify(this.state.contacts));\n        }\n    }\n\n    render() { \n        const { contacts} = this.state;\n\n        return (\n            <div className='Phonebook'>\n               <h1 className='Phonebook-title'>Phonebook</h1>\n                <ContactForm    onSubmit={this.handleSubmitForm} check={this.checkContact} />\n          \n                <h2>Contacts</h2>\n                {contacts.length > 1 && (\n                    <Filter />\n                )}\n\n\n                {contacts.length > 0 && (\n                    <ContactList  />\n                )}\n            </div>\n        );\n    }\n}\n \nexport default App;\n\n\n\n\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport actions from './contact-actions';\n\nconst items = createReducer([], {\n    [actions.addContacts]: (state,{ payload} ) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) => \n    state.filter(({ id }) => id !== payload),  \n})\n\nconst filter = createReducer('',{\n    [actions.changeFilter]:  (_, { payload }) => payload,\n}) \n\nexport default combineReducers({\n    items,\n    filter\n}) \n\n\n\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactReduser from './contact/contact-reducer';\nimport logger from 'redux-logger'\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n    reducer: {\n        contacts: contactReduser,    \n    },\n    middleware,\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}